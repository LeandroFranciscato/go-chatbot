// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// Entity is an autogenerated mock type for the Entity type
type Entity struct {
	mock.Mock
}

type Entity_Expecter struct {
	mock *mock.Mock
}

func (_m *Entity) EXPECT() *Entity_Expecter {
	return &Entity_Expecter{mock: &_m.Mock}
}

// GetCollectionName provides a mock function with given fields:
func (_m *Entity) GetCollectionName() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetCollectionName")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Entity_GetCollectionName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetCollectionName'
type Entity_GetCollectionName_Call struct {
	*mock.Call
}

// GetCollectionName is a helper method to define mock.On call
func (_e *Entity_Expecter) GetCollectionName() *Entity_GetCollectionName_Call {
	return &Entity_GetCollectionName_Call{Call: _e.mock.On("GetCollectionName")}
}

func (_c *Entity_GetCollectionName_Call) Run(run func()) *Entity_GetCollectionName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Entity_GetCollectionName_Call) Return(_a0 string) *Entity_GetCollectionName_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Entity_GetCollectionName_Call) RunAndReturn(run func() string) *Entity_GetCollectionName_Call {
	_c.Call.Return(run)
	return _c
}

// GetID provides a mock function with given fields:
func (_m *Entity) GetID() primitive.ObjectID {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetID")
	}

	var r0 primitive.ObjectID
	if rf, ok := ret.Get(0).(func() primitive.ObjectID); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(primitive.ObjectID)
		}
	}

	return r0
}

// Entity_GetID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetID'
type Entity_GetID_Call struct {
	*mock.Call
}

// GetID is a helper method to define mock.On call
func (_e *Entity_Expecter) GetID() *Entity_GetID_Call {
	return &Entity_GetID_Call{Call: _e.mock.On("GetID")}
}

func (_c *Entity_GetID_Call) Run(run func()) *Entity_GetID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Entity_GetID_Call) Return(_a0 primitive.ObjectID) *Entity_GetID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Entity_GetID_Call) RunAndReturn(run func() primitive.ObjectID) *Entity_GetID_Call {
	_c.Call.Return(run)
	return _c
}

// NewEntity creates a new instance of Entity. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEntity(t interface {
	mock.TestingT
	Cleanup(func())
}) *Entity {
	mock := &Entity{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
